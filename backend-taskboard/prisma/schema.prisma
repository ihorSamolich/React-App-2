// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Board {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(255)
  tasks List[]
}

model List {
  id      Int    @id @default(autoincrement())
  name    String @db.VarChar(255)
  board   Board  @relation(fields: [boardId], references: [id])
  boardId Int
  tasks   Task[]
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String    @db.VarChar(4000)
  dueDate     DateTime  @db.Timestamptz()
  priority    Priority  @relation(fields: [priorityId], references: [id])
  priorityId  Int
  list        List      @relation(fields: [listId], references: [id])
  listId      Int
  history     History[]
}

model Priority {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  value Int    @unique @db.Integer
  tasks Task[]
}

model History {
  id       Int      @id @default(autoincrement())
  action   String   @db.VarChar(255)
  field    String?  @db.VarChar(255)
  taskName String?  @db.VarChar(255)
  newValue String?  @db.VarChar(4000)
  oldValue String?  @db.VarChar(4000)
  date     DateTime @db.Timestamptz()
  task     Task?    @relation(fields: [taskId], references: [id])
  taskId   Int?
}
